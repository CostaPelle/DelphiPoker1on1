unit SignupForm;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Hash, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.pngimage, Vcl.ExtCtrls,
  FireDAC.Stan.Intf, FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf,
  FireDAC.Phys.Intf, FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async,
  FireDAC.Phys, FireDAC.Phys.PG, FireDAC.Phys.PGDef, FireDAC.VCLUI.Wait,
  Data.DB, FireDAC.Comp.Client, FireDAC.Phys.IBDef, FireDAC.Phys.IBBase,
  FireDAC.Phys.IB, Vcl.StdCtrls;

type
  TForm4 = class(TForm)
    MainPanel: TPanel;
    Image1: TImage;
    FDConnection1: TFDConnection;
    FDPhysPgDriverLink1: TFDPhysPgDriverLink;
    btnSignup: TButton;
    edtUsername: TEdit;
    edtPassword: TEdit;
    procedure btnSignupClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form4: TForm4;

implementation

{$R *.dfm}


function HashPassword(const Password: string): string;
begin
  Result := THashSHA2.GetHashString(Password); // SHA-256 hash
end;

procedure TForm4.btnSignupClick(Sender: TObject);
begin
var
  Username, Password: string;
begin
  // Get the values from the text fields
  Username := edtUsername.Text;
  Password := edtPassword.Text;

  // Check if both fields are filled in
  if (Username = '') or (Password = '') then
  begin
    ShowMessage('Please enter both username and password.');
    Exit;
  end;

  // Prepare and execute the SQL query
  try
    FDQuery1.SQL.Text := 'INSERT INTO users (username, password) VALUES (:username, :password)';
    FDQuery1.Params.ParamByName('username').AsString := Username;
    FDQuery1.Params.ParamByName('password').AsString := Password; // For simplicity, you might want to hash the password
    FDQuery1.ExecSQL; // Execute the SQL query

    ShowMessage('User added successfully!');
  except
    on E: Exception do
      ShowMessage('Error: ' + E.Message);
  end;
end;
end;

end.
